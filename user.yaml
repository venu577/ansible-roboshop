- name: configuring user component
  hosts: user
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable default nodejs
    ansible.builtin.command: dnf module enable nodejs -y 
    #here there is no special ansible module for enabling nodejs, so we use command module

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present   

  - name: create roboshop system user
    ansible.builtin.user:
     name: roboshop
     shell: /sbin/nologin
     system: true #system user
     home: /app

  - name: create app directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download user component code
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/user-v3.zip 
     dest: /tmp/user.zip          

  - name: extract user component code
    ansible.builtin.unarchive:
     src: /tmp/user.zip
     dest: /app
     remote_src: yes
     #this module thinks file exist on ansible control server, needs to extract on to remote machine
     #remote_src: yes means files already exist in user server

  - name: install nodejs dependencies
    community.general.npm:
     path: /app

  - name: copy user service to system directory
    ansible.builtin.copy:
     src: user.service
     dest: /etc/systemd/system/user.service   

  - name: systemctl daemon reload
    ansible.builtin.systemd_service:
     daemon_reload: true

  - name: start and enable user service
    ansible.builtin.service:
     name: user
     state: started
     enabled: yes 

 